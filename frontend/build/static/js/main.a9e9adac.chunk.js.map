{"version":3,"sources":["util/route_util.js","util/session_api_util.js","actions/session_actions.js","components/session/login_form.js","components/session/login_form_container.js","components/app/splash_page.js","components/app/button_bar.js","components/session/signup_form.js","components/session/signup_form_container.js","util/word_list_api_util.js","actions/word_list_actions.js","components/wordlists/listcomponents/phrase.js","util/date_util.js","components/wordlists/compose_phrase_list.js","components/wordlists/compose_phrase_list_container.js","components/wordlists/listcomponents/deletesafe.js","components/wordlists/word_lists.js","components/wordlists/word_lists_container.js","util/array_shuffle.js","components/game/board.js","components/game/game.js","components/app.js","components/root.js","reducers/session_reducer.js","reducers/session_errors_reducer.js","reducers/errors_reducer.js","reducers/ui_reducer.js","actions/ui_actions.js","reducers/lists_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["mapStateToProps","state","loggedIn","session","isAuthenticated","AuthRoute","withRouter","connect","_ref","Component","component","path","exact","react_default","a","createElement","react_router","render","props","to","ProtectedRoute","_ref2","rest","Object","objectWithoutProperties","assign","setAuthToken","token","axios","defaults","headers","common","receiveErrors","errors","type","signup","user","dispatch","userData","post","then","err","response","data","login","res","localStorage","setItem","APIUtil","decoded","jwt_decode","currentUser","catch","logout","removeItem","LoginForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handle","password","demoLogin","bind","assertThisInitialized","handleSubmit","renderErrors","e","preventDefault","demoUser","sleep","ms","Promise","setTimeout","document","getElementById","focus","i","length","setState","substr","click","blur","nextProps","history","push","field","_this2","defineProperty","currentTarget","value","_this3","keys","map","error","key","concat","className","onSubmit","id","onChange","update","placeholder","onClick","react_router_dom","React","SplashPage","login_form_container","title","aria-label","role","href","target","rel","alt","src","SignupForm","password2","clearedErrors","signedIn","isSignedIn","getWordList","get","receiveNewWordList","wordList","fetchUserWordLists","getUserWordLists","lists","receiveUserWordLists","console","log","saveWordList","postWordList","editWordList","put","putWordList","removeWordList","delete","deleteWordList","removeOldWordList","selectID","select","Phrase","_useState","useState","_useState2","slicedToArray","editable","setEditable","inputRef","createRef","current","edit","idx","Fragment","ref","defaultValue","phrase","onFocus","autoFocus","react_copy_to_clipboard_lib","text","hotDate","Date","toLocaleString","month","day","year","ComposePhraseList","makeList","location","list","match","params","name","unlisted","words","deletePhraseAt","editPhraseAt","pathname","_id","encodeURIComponent","done","gameResponse","toConsumableArray","str","_this4","splice","_this5","_this6","checked","_this7","listcomponents_phrase","gameLink","disabled","updateName","updateListed","join","DeleteSafe","toggleState","toggleToggleState","WordLists","useEffect","_fetchData","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","fetchData","deletesafe","values","userID","wordlistID","sample","t","n","r","Array","from","rand","swap","pop","_marked","Math","floor","random","j","q","shuffle","winCheck","gameBoard","size","idxV","win","idxH","rows","diagonalA","diagonalB","blackoutCheck","Board","initialGameBoard","setGameBoard","free","midForFree","newBoard","slice","clear","blackout","link","row","square","toggleGameBoardSquare","shuffleList","smaller","bigger","setFree","setRepeat","repeat","Game","phrases","phraseLister","pow","linkList","board","button_bar","SignupFormContainer","WordListsContainer","ComposePhraseListContainer","Root","store","es","components_app","initialState","_nullErrors","SessionErrorsReducer","undefined","action","freeze","combineReducers","preloadedState","userModalOpen","contactUsModalOpen","itemModal","open","clothingtype","WordListsReducer","all","new","newState","merge","filter","RootReducer","objectSpread","ui","middlewares","thunk","configureStore","createStore","rootReducer","applyMiddleware","addEventListener","jwtToken","decodedUser","currentTime","now","exp","window","root","ReactDOM","components_root"],"mappings":"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","file":"static/js/main.a9e9adac.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect, withRouter } from 'react-router-dom';\n\nconst Auth = ({ component: Component, path, loggedIn, exact }) => (\n  <Route path={path} exact={exact} render={(props) => (\n    !loggedIn ? (\n      <Component {...props} />\n    ) : (\n      <Redirect to=\"/wordlists\" />\n    )\n  )} />\n);\n\nconst Protected = ({ component: Component, loggedIn, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      loggedIn ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/\" />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => (\n  {loggedIn: state.session.isAuthenticated}\n);\n\nexport const AuthRoute = withRouter(connect(mapStateToProps)(Auth));\n\nexport const ProtectedRoute = withRouter(connect(mapStateToProps)(Protected));\n","import axios from 'axios';\n\nexport const setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport const signup = (userData) => {\n  return axios.post('/api/users/register', userData);\n};\n\nexport const login = (userData) => {\n  return axios.post('/api/users/login', userData);\n};\n\n","import * as APIUtil from '../util/session_api_util';\nimport jwt_decode from 'jwt-decode';\n\nexport const RECEIVE_CURRENT_USER = \"RECEIVE_CURRENT_USER\";\nexport const RECEIVE_SESSION_ERRORS = \"RECEIVE_SESSION_ERRORS\";\nexport const RECEIVE_USER_LOGOUT = \"RECEIVE_USER_LOGOUT\";\nexport const RECEIVE_USER_SIGN_IN = \"RECEIVE_USER_SIGN_IN\";\n\nexport const receiveCurrentUser = currentUser => ({\n    type: RECEIVE_CURRENT_USER,\n    currentUser\n});\n\nexport const receiveUserSignIn = () => ({\n    type: RECEIVE_USER_SIGN_IN\n});\n  \nexport const receiveErrors = errors => ({\n    type: RECEIVE_SESSION_ERRORS,\n    errors\n});\n\nexport const logoutUser = () => ({\n    type: RECEIVE_USER_LOGOUT\n});\n\nexport const signup = user => dispatch => (\n    APIUtil.signup(user).then(() => (\n        dispatch(receiveUserSignIn())\n    ), err => (\n        dispatch(receiveErrors(err.response.data))\n    ))\n);\n\nexport const login = user => dispatch => (\n    APIUtil.login(user).then(res => {\n        const { token } = res.data;\n        localStorage.setItem('jwtToken', token);\n        APIUtil.setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(receiveCurrentUser(decoded))\n    })\n    .catch(err => {\n        dispatch(receiveErrors(err.response.data));\n    })\n)\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem('jwtToken')\n    APIUtil.setAuthToken(false)\n    dispatch(logoutUser())\n};\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      handle: '',\n      password: '',\n      errors: {}\n    };\n\n    this.demoLogin = this.demoLogin.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  async demoLogin(e) {\n    e.preventDefault();\n\n    const demoUser = {\n      handle: 'GuestUser',\n      password: 'password'\n    };\n\n    const sleep = ms => new Promise(res => setTimeout(res, ms));\n\n    document.getElementById(\"handle\").focus();\n    for (let i = 1; i <= demoUser.handle.length; i++) {\n      this.setState({ handle: demoUser.handle.substr(0, i) });\n      await sleep(50);\n    }\n\n    await sleep(250);\n\n    document.getElementById('password-input').focus();\n    for (let i = 1; i <= demoUser.password.length; i++) {\n      this.setState({ password: demoUser.password.substr(0, i) });\n      await sleep(50);\n    }\n\n    await sleep(250);\n\n    document.getElementById('submit-login').click();\n    document.getElementById('password-input').blur();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      handle: this.state.handle,\n      password: this.state.password\n    };\n\n    this.props.login(user); \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"login-form-box\">\n      <h1>Internet Bingo</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"login-form\">\n              <input type=\"text\"\n                className=\"input-field\"\n                id=\"handle\"\n                value={this.state.handle}\n                onChange={this.update('handle')}\n                placeholder=\"Username\"\n              />\n            <br></br>\n              <input type=\"password\"\n                id=\"password-input\"\n                className=\"input-field\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Password\"\n              />\n            <br/>\n            <div>\n            <input className=\"submit-btn\" id=\"submit-login\" type=\"submit\" value=\"Sign-in\" />\n            <br></br>\n            <input className=\"demo-user-btn\" type=\"submit\" value=\"Guest User\" onClick={this.demoLogin}/>\n            </div>\n            {this.renderErrors()}\n              <p className=\"signup-text\">\n                Don't have an account? \n                <br></br>\n                <Link className=\"signup-link\" to={'/signup'}> Sign-up here!</Link>\n              </p>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);\n","import { connect } from 'react-redux';\nimport { login } from '../../actions/session_actions';\nimport LoginForm from './login_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    login: user => dispatch(login(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm);","import React from 'react';\nimport LoginFormContainer from '../session/login_form_container'\n\nconst SplashPage = () => (\n     <div className=\"splash\">       \n        <div className=\"splash-right-box\">\n          <LoginFormContainer/>\n        </div>\n     </div>\n);\n\n\nexport default SplashPage;\n","    \nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/session_actions';\n\nconst msp = state => ({\n    loggedIn: state.session.isAuthenticated,\n    handle: (state.session.user ? state.session.user.handle : 'guest'),\n    id: (state.session.user ? state.session.user.id : 'guest'),\n})\n\nconst mdp = dispatch => {\n    return {\n        logout: () => {logout()(dispatch)},\n    }\n}\n\nfunction ButtonBar(props) {\nreturn (\n    <div className=\"buttonbar\">\n    <div>\n        <button title=\"Home\" onClick={()=>props.history.push('/')}>\n            <span title=\"Home\" aria-label=\"Home\" role=\"img\">\n                🏡\n            </span>\n        </button> \n        { props.loggedIn &&\n            <button title=\"Sign-out\" onClick={()=>props.logout()}>\n                <span title=\"Sign-out\" aria-label=\"Sign-out\" role=\"img\">\n                    🚪\n                </span>\n            </button> }\n    </div>\n    <a href=\"https://github.com/hechtoid/Bingo\" title=\"View Source on GitHub\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <img alt=\"GitHub Logo\" src=\"/github.png\" />\n    </a>\n    </div>\n   )\n}\n\nexport default connect(msp, mdp)(withRouter(ButtonBar));  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    ","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      handle: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.clearedErrors = false;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.signedIn === true) {\n      this.props.history.push('/');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let user = {\n      handle: this.state.handle,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.signup(user, this.props.history); \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"splash\">\n      <div> \n          <div className=\"signup-form-box\">\n          <h1>Internet Bingo - Add User</h1>\n\n            <form onSubmit={this.handleSubmit}>\n              <div className=\"signup-form\">\n                  <input type=\"text\"\n                    className=\"input-field\"\n                    value={this.state.handle}\n                    onChange={this.update('handle')}\n                    placeholder=\"Username\"\n                  />\n                <br/>\n                  <input type=\"password\"\n                    className=\"input-field\"                \n                    value={this.state.password}\n                    onChange={this.update('password')}\n                    placeholder=\"Password\"\n                  />\n                <br/>\n                  <input type=\"password\"\n                    className=\"input-field\"\n                    value={this.state.password2}\n                    onChange={this.update('password2')}\n                    placeholder=\"Confirm Password\"\n                  />\n                <br/>\n                <input className=\"submit-btn\" type=\"submit\" value=\"Create Account\" />\n                {this.renderErrors()}\n                  <p>\n                    Already have an account?  \n                    <Link className=\"signup-link\" to={'/'}> Sign-in here!</Link>\n                  </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);\n","import { connect } from 'react-redux';\nimport { signup } from '../../actions/session_actions';\nimport SignupForm from './signup_form';\n\nconst mapStateToProps = (state) => {\n  return {\n    signedIn: state.session.isSignedIn,\n    errors: state.errors.session\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signup: user => dispatch(signup(user))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignupForm);","import axios from 'axios';\n\n\nexport const getUserWordLists = id => {\n  return axios.get(`/api/wordlists/user/${id}`)\n};\n\nexport const getWordList = id => {\n  return axios.get(`/api/wordlists/${id}`)\n}\n\nexport const postWordList = data => {\n  return axios.post('/api/wordlists/', data)\n}\nexport const putWordList = data => {\n  return axios.put('/api/wordlists/', data)\n}\nexport const deleteWordList = id => {\n  return axios.delete(`/api/wordlists/${id}`)\n}\n","import { getUserWordLists, postWordList, putWordList, deleteWordList } from '../util/word_list_api_util';\n\nexport const RECEIVE_USER_WORD_LISTS = \"RECEIVE_USER_WORD_LISTS\";\nexport const RECEIVE_NEW_WORD_LIST = \"RECEIVE_NEW_WORD_LIST\";\nexport const REMOVE_WORD_LIST = \"REMOVE_WORD_LIST\";\n\nexport const receiveUserWordLists = lists => ({\n  type: RECEIVE_USER_WORD_LISTS,\n  lists\n});\n\nexport const receiveNewWordList = wordList => ({\n  type: RECEIVE_NEW_WORD_LIST,\n  wordList\n})\n\nexport const removeOldWordList = id => ({\n  type: REMOVE_WORD_LIST,\n  id\n})\n\nexport const fetchUserWordLists = id => dispatch => (\n  getUserWordLists(id)\n    .then(lists => dispatch(receiveUserWordLists(lists)))\n    .catch(err => console.log(err))\n);\n\nexport const saveWordList = data => dispatch => (\n  postWordList(data)\n    .then(res => dispatch(receiveNewWordList(res)))\n    .catch(err => console.log(err))\n);\nexport const editWordList = data => dispatch => (\n  putWordList(data)\n    .then(res => dispatch(receiveNewWordList(res)))\n    .catch(err => console.log(err))\n);\n\nexport const removeWordList = id => dispatch => (\n  deleteWordList(id)\n  .then( () => dispatch(removeOldWordList(id)))\n  .catch(err => console.log(err))\n);","import React from 'react';\nimport { useState } from 'react';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nconst selectID = (e) => { e.target.select()}\n\nconst Phrase = props => {\n    const [editable, setEditable] = useState(false)\n    const inputRef = React.createRef();\n    const handleEditToggle = (e) => {\n        if (editable) {\n            handleSubmit(e)\n        } else {\n            setEditable(true)             \n        }\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (inputRef.current.value.length>0) {\n            props.edit(props.idx, inputRef.current.value)\n        }\n        setEditable(false)\n    }\nreturn (\n    <div className=\"phrase\">\n        <li>\n            <div>\n            { props.edit && \n                    <button title=\"Edit Phrase\" onClick={handleEditToggle}>\n                        <div>\n                            <span className=\"pencil\" title=\"Edit Phrase\" aria-label=\"Edit Phrase\" role=\"img\">\n                                ✏️\n                            </span>\n                        </div>\n                    </button> }\n                { editable ? <>\n                    <form onSubmit={handleSubmit}>\n                        <input \n                            type=\"text\" \n                            ref={inputRef} \n                            defaultValue={props.phrase} \n                            onFocus={selectID} \n                            autoFocus>\n                        </input>\n                    </form>\n                    <button title=\"Cancel\" onClick={()=>setEditable(false)}>\n                        <div>\n                            <span title=\"Cancel\" aria-label=\"Cancel\" role=\"img\"> \n                                ❌ \n                            </span>\n                        </div>\n                    </button>\n                </>\n                : props.phrase }  \n            </div>\n            { props.delete && !editable &&\n            <button title=\"Delete Phrase\" onClick={props.delete(props.idx)}>\n                <div>\n                    <span title=\"Delete Phrase\" aria-label=\"Delete Phrase\" role=\"img\"> \n                        🗑️ \n                    </span>\n                </div>\n            </button> }\n        </li>\n        <CopyToClipboard text={props.phrase}>\n            <div title=\"Click to Copy\"></div>\n        </CopyToClipboard>\n    </div>\n)\n}\n\nexport default Phrase;","export const hotDate = () => `${new Date().toLocaleString('default', { month: 'long', day: '2-digit', year: 'numeric' })}`","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport Phrase from './listcomponents/phrase'\n\nimport { getWordList } from '../../util/word_list_api_util';\nimport { hotDate } from '../../util/date_util';\n\nimport './word_list.css'\n\nclass ComposePhraseList extends React.Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        name: '',\n        unlisted: false,\n        words: []\n      }\n      this.handleSubmit = this.handleSubmit.bind(this)\n      this.saveWordList = this.saveWordList.bind(this)\n      this.editWordList = this.editWordList.bind(this)\n      this.deletePhraseAt = this.deletePhraseAt.bind(this)\n      this.editPhraseAt = this.editPhraseAt.bind(this)\n  } \n  selectID(e) { e.target.select()}\n  \n  componentDidMount() {\n    this.makeList()\n  }\n  componentDidUpdate() {\n    document.title = `Writing List: ${this.state.name} - Internet Bingo`\n  }\n  makeList = () => {\n    if (this.props.location.list) {\n      this.setState(this.props.location.list)\n    } \n    else if (this.props.match.params.id) {\n      getWordList(this.props.match.params.id)\n      .then( res => {\n        this.setState(res.data)\n      } )\n      .catch( this.setState({\n        name: `${this.props.currentUser.handle}'s New Phrase List - ${hotDate()}`,\n        unlisted: false,\n        words: []      \n      }) )\n    } else {\n      this.setState({\n        name: `${this.props.currentUser.handle}'s New Phrase List - ${hotDate()}`,\n        unlisted: false,\n        words: []      \n      })\n    }\n  }\n\n  gameResponse(res) {\n    this.props.history.push(\n        { pathname: `/game/${res.wordList.data._id}/${encodeURIComponent(res.wordList.data.name)}`, \n          list: {words: res.wordList.data.words, name: res.wordList.data.name, _id: res.wordList.data._id} }\n      )\n  }\n  saveWordList(e, done) {\n    e.preventDefault()\n    if (this.state.words.length >= 3) {\n      this.props.saveWordList(this.state)\n        .then(res => this.gameResponse(res))\n    }\n  }\n  editWordList(e, done) {\n    e.preventDefault()\n    if (this.state.words.length >= 3) {\n      this.props.editWordList(this.state)\n        .then(res => this.gameResponse(res))\n    }\n  }\n  handleSubmit(e) {\n    e.preventDefault()\n    if (e.target[0].value.length>0) {\n      this.setState({\n        words: [...this.state.words, e.target[0].value]\n      })\n      e.target[0].value = ''\n    }\n  }\n  editPhraseAt(idx, str) {\n      let words = this.state.words\n      words[idx] = str\n      this.setState({\n        words\n      })\n  }\n  deletePhraseAt(idx) {\n    return e => {\n      let words = this.state.words\n      words.splice(idx, 1)\n      this.setState({\n        words\n      })\n    }\n  }\n  updateName() {\n    return e => this.setState({\n      name: e.currentTarget.value\n    });\n  }\n  updateListed() {\n    return e => this.setState({\n      unlisted: e.currentTarget.checked\n    })\n  }\n\n  render() {\n    let words = this.state.words.map( (phrase,idx) => {\n        return (\n            <Phrase \n                phrase={phrase} \n                delete={this.deletePhraseAt}   \n                edit={this.editPhraseAt}\n                idx={idx} \n                key={idx} \n            />\n        )\n    } )\n    let gameLink = this.state.words.length===0 \n                ? this.props.location.pathname \n                  : this.state._id \n                    ? { pathname: `/game/${this.state._id}/${encodeURIComponent(this.state.name)}`, list: this.state }\n                    : { pathname: `/game/new/${encodeURIComponent(this.state.name)}`, list: {words: this.state.words, name: this.state.name, _id: 'new'} }\n    return (\n      <div className=\"new-wordlist\">\n      <div>\n        <div className=\"title\">\n          <Link to={gameLink}> \n            <button title=\"Start Game\" disabled={this.state.words.length===0}>\n              <div>\n                <span title=\"Start Game\" aria-label=\"Start Game\" role=\"img\">\n                  🎰    \n                </span>\n              </div>\n            </button>\n          </Link>\n          <input \n            type=\"text\" \n            value={this.state.name} \n            onChange={this.updateName()} \n            onFocus={this.selectID}\n            autoFocus\n            >\n          </input>\n          <label>\n            <input type=\"checkbox\" onChange={this.updateListed()} checked={this.state.unlisted} />\n            UnListed\n          </label>\n        </div>\n        <div \n          className={ this.state.words.length >= 4\n            ? \"save-button\"\n            : \"save-button-disabled\" } \n          onClick={ this.state._id && this.state.user === this.props.currentUser.id ? this.editWordList : this.saveWordList }\n          title=\"Persist This List\"\n        >\n          { !this.state._id \n            ? \"SAVE\" \n            : this.state.user === this.props.currentUser.id\n            ? \"UPDATE\" \n            : \"CLONE\" }\n        </div>\n        <div \n          className={ this.state.words.length >= 24 \n          ? [\"hidden\", \"disclaimer\"].join(' ')\n          : \"disclaimer\" }\n        >\n          Lists need at least 24 phrases to play a standard 5x5 board without repeats. \n        </div>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <div>\n              <span>\n                {this.state.words.length} \n              </span>\n              Phrases\n            </div>\n            <input type=\"text\" placeholder=\"Add Phrase\"></input>\n            <input type=\"submit\" value=\"Add to List\" title=\"Add to List\" />\n          </div>\n        </form>        \n        <ul className=\"wordlist\">\n          {words}\n        </ul>\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ComposePhraseList);\n","import { connect } from 'react-redux';\nimport { saveWordList, editWordList } from '../../actions/word_list_actions';\nimport ComposePhraseList from './compose_phrase_list';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.user,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveWordList: data => dispatch(saveWordList(data)),\n    editWordList: data => dispatch(editWordList(data)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposePhraseList);\n","import React from 'react';\nimport { useState } from 'react';\n\nconst DeleteSafe = props => {\n    const [toggleState, toggleToggleState] = useState(false)\n\nreturn (\n    <div className=\"delete\" onClick={()=>toggleToggleState(!toggleState)}>\n\n        <div className={toggleState?\"confirm\":\"zero\"} onClick={props.delete}>\n            <span>\n                CONFIRM\n            </span>\n        </div>\n        <div className={toggleState?\"zero\":\"question\"}>\n            <span>\n                DELETE&nbsp;LIST\n            </span>\n        </div>\n        <div className={toggleState?\"cancel\":\"zero\"} onClick={()=>toggleToggleState(!toggleState)}>\n            <span>\n                CANCEL\n            </span>\n        </div>\n    </div>\n)    \n}\n\nexport default DeleteSafe;","import React, {  useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Phrase from './listcomponents/phrase'\nimport DeleteSafe from './listcomponents/deletesafe'\n\nimport './word_list.css'\n\nfunction WordLists(props) {\n    useEffect(() => {\n        document.title = 'List of Phrase Lists - Internet Bingo'\n        async function fetchData() {\n          await props.fetchUserWordLists(props.currentUser.id)\n        }\n        fetchData();\n      }, []);\nreturn (\n    <div className=\"wordlists\">\n        <div>\n            <div className=\"new\">\n                <Link to=\"/wordlists/new\">\n                    <div>\n                        <div className=\"title\">\n                            Compose New Phrase List \n                        </div>\n                        <button title=\"New List\">\n                            <div>\n                                <span className=\"pencil\" title=\"New List\" aria-label=\"New List\" role=\"img\">\n                                    ✏️\n                                </span>\n                            </div>\n                        </button>   \n                    </div>\n                    <div>\n                        Make a New Phrase List to share with your Friends!                 \n                    </div>\n                </Link>\n                <div>\n                    Click a Green Title to Start a Game!\n                </div>\n            </div>\n            { props.lists.map( (list,idx) => {\n                return (\n                    <ul key={idx}>\n                        <div className=\"title\" title=\"Play Game\">\n                            <div>\n                                <Link to={{ pathname: `/game/${list._id}/${encodeURIComponent(list.name)}`, list }}>\n                                    {list.name}\n                                </Link>   \n                            </div>\n                            <div>\n                                <Link to={{ pathname: `/wordlists/${list._id}/${encodeURIComponent(list.name)}`, list }}>\n                                    <button title=\"Edit List\">\n                                        <div>\n                                            <span className=\"pencil\" title=\"Edit List\" aria-label=\"Edit List\" role=\"img\">\n                                                ✏️\n                                            </span>\n                                        </div>\n                                    </button>\n                                </Link>\n                            </div>\n                        </div>\n                        <div>\n                            { list.words.map( (phrase,idx) => <Phrase phrase={phrase} key={idx} /> ) }\n                        </div>\n                        <div>\n                            <DeleteSafe delete={() => props.removeWordList(list._id)}/>\n                        </div>\n                    </ul>\n                )\n            }) }\n        </div>\n    </div>\n)\n}\n\nexport default WordLists;","import { connect } from 'react-redux';\nimport { fetchUserWordLists, removeWordList } from '../../actions/word_list_actions';\nimport WordLists from './word_lists';\n\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.session.user,\n    lists: Object.values(state.lists.user),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUserWordLists: userID => dispatch(fetchUserWordLists(userID)),\n    removeWordList: wordlistID => dispatch(removeWordList(wordlistID))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WordLists);\n","//Thank you to Thank you on StackOverflow (no that's actually their name https://stackoverflow.com/users/633183/thank-you)\n\nconst shuffle = t =>\n  Array.from(sample(t, t.length))\n\nfunction* sample(t, n)\n{ let r = Array.from(t)\n  while (n > 0 && r.length)\n  { const i = rand(r.length) // 1\n    swap(r, i, r.length - 1) // 2\n    yield r.pop()            // 3\n    n = n - 1\n  }\n}\n\nconst rand = n =>\n  Math.floor(Math.random() * n)\n\nfunction swap (t, i, j)\n{ let q = t[i]\n  t[i] = t[j]\n  t[j] = q\n  return t\n}\n\nexport default shuffle;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst rows = (gameBoard, size) => {\n    let win\n    for (let idxV = 0; idxV < size; idxV++) {\n        let win = true\n        for (let idxH = 0; idxH < size; idxH++) {\n            if (gameBoard[idxV][idxH] === false ) {\n                win = false\n            }\n        } \n        if (win) { return win }\n    }\n    // return win\n// }\n// const columns = (gameBoard, size) => {\n    // let win\n    for (let idxH = 0; idxH < size; idxH++) {\n        let win = true\n        for (let idxV = 0; idxV < size; idxV++) {\n            if (gameBoard[idxV][idxH] === false ) {\n                win = false\n            }\n        } \n        if (win) { return win }\n    }\n    return win\n}\nconst diagonalA = (gameBoard, size) => {\n    let win = true\n    for (let i = 0; i < size; i++) {\n            if (gameBoard[i][i] === false ) {\n                win = false\n            }\n    }\n    return win\n}\nconst diagonalB = (gameBoard, size) => {\n    let win = true\n    for (let i = 0; i < size; i++) {\n            if (gameBoard[i][(size-1-i)] === false ) {\n                win = false\n            }\n    }\n    return win\n}\nconst winCheck = (gameBoard, size) => {\n    return (rows(gameBoard, size) \n        // || columns(gameBoard, size) \n        || diagonalA(gameBoard, size) \n        || diagonalB(gameBoard, size))\n}\nconst blackoutCheck = (gameBoard, size) => {\n    let win = true\n    for (let idxV = 0; idxV < size; idxV++) {\n        for (let idxH = 0; idxH < size; idxH++) {\n            if (gameBoard[idxV][idxH] === false ) {\n                win = false\n            }\n        } \n    }\n    return win\n}\n\nfunction Board(props) {\n    const initialGameBoard = Array.from(Array(props.size), () => Array.from(Array(props.size), () => false))\n    const [gameBoard, setGameBoard] = useState(initialGameBoard)\n    useEffect(() => free(), [props.free])    \n    const midForFree = props.free && props.size % 2 === 1 ? Math.floor(props.size / 2) : false\n    const free = () => {\n        if (midForFree) {\n            let newBoard = gameBoard.slice()\n            newBoard[midForFree][midForFree] = true\n            setGameBoard(newBoard)\n        }\n    }\n    const clear = () => {\n        if (midForFree) {\n            initialGameBoard[midForFree][midForFree] = true\n        }\n        setGameBoard(initialGameBoard)\n    }\n    const shuffleThis = () => {\n        clear();\n        props.shuffleList()\n    }\n    const toggleGameBoardSquare = (idxV, idxH) => {\n        let newBoard = gameBoard.slice()\n        newBoard[idxV][idxH] = !newBoard[idxV][idxH]\n        setGameBoard(newBoard)\n    }\n    const blackout = blackoutCheck(gameBoard, props.size)\n    const win = winCheck(gameBoard, props.size)\n    useEffect(() => {document.title = `Playing Board: ${props.name} ${props.size}x${props.size} - Internet Bingo`}, [props.name, props.size])\n    let list = props.list.slice()\n\n    \nreturn (\n    <div className=\"game\"> \n        <div>\n            { win \n            ? <div className=\"win\">BINGO</div>\n            : <div className=\"play\">BINGO</div>\n            }\n            { blackout \n            ? <div className=\"win\">BLACKOUT</div>\n            : <div className=\"play\">BLACKOUT</div>\n            }\n        </div> \n        <div>\n            <div className=\"thead\">\n                { props.link && \n                    <Link to={props.link}>\n                        <button title=\"Edit List\">\n                            <div>\n                                <span className=\"pencil\" title=\"Edit List\" aria-label=\"Edit List\" role=\"img\">\n                                    ✏️\n                                </span>\n                            </div>\n                        </button>\n                    </Link> }\n                <div>\n                    {props.name}\n                </div>   \n                <div>\n                </div>   \n            </div>\n            <table className={ blackout ? \"blackout\" : \"\" }>\n                <tbody>\n                { gameBoard.map( (row, idxV) => {\n                    return (\n                        <tr key={idxV}>\n                            { row.map( (square, idxH) => {\n                                if ( midForFree\n                                    && idxV === midForFree\n                                    && idxH === midForFree ) \n                                    { return (\n                                        <td className={ win ? [\"winner\", \"free-spot\"].join(' ') : \"free-spot\" } key={idxH}>\n                                            <div>\n                                                FREE\n                                            </div>\n                                        </td>\n                                    )    \n                                } else {\n                                    return (\n                                        <td \n                                            key={idxH}\n                                            className={ square\n                                                        ? win \n                                                            ? \"winner\"\n                                                            : \"clicked\"\n                                                        : \"unclicked\" }\n                                            onClick={() => toggleGameBoardSquare(idxV, idxH)}\n                                        > \n                                        <div>\n                                            {list.pop()}\n                                        </div>\n                                        </td>\n                                    )\n                                }\n                            }) }\n                        </tr>\n                    )\n                }) }\n                </tbody>\n            </table>\n        </div>\n        <div>\n            <button onClick={clear}>CLEAR</button>\n            <button onClick={shuffleThis}>CLEAR & SHUFFLE</button>\n            <button onClick={props.smaller} disabled={props.size<=2}>smaller</button>\n            <button onClick={props.bigger}>BIGGER</button>\n            <label className={ props.size % 2 === 0 ? \"disabled\" : \"\" }>\n                <input \n                    type=\"checkbox\" \n                    onChange={props.setFree} \n                    checked={midForFree} \n                    disabled={props.size % 2 === 0}\n                /> \n                Free Square\n            </label>\n            <label>\n                <input \n                    type=\"checkbox\" \n                    onChange={props.setRepeat} \n                    checked={props.repeat} \n                /> \n                Repeat Phrases\n            </label>\n        </div>\n    </div>\n    )\n}\n\nexport default Board;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { getWordList } from '../../util/word_list_api_util';\nimport shuffle from '../../util/array_shuffle';\n\nimport Board from './board';\nimport './board.css';\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            phrases: [],\n            free: true,\n            repeat: true,\n            size: 5,\n            key: 1\n        }        \n    }\n    componentDidMount() {\n        this.makeList()\n    }\n    makeList = () => {\n        if (this.props.location.list) {\n            this.setState({\n                phrases: shuffle(this.props.location.list.words),\n                name: this.props.location.list.name,\n                user: this.props.location.list.user,\n                _id: this.props.location.list._id\n            }) \n        } else if (this.props.match.params.id) { \n            getWordList(this.props.match.params.id)\n            .then( res => {\n                this.setState({\n                    phrases: shuffle(res.data.words),\n                    name: res.data.name,\n                    user: res.data.user,\n                    _id: res.data._id\n                }) \n            } )\n            .catch( res => {\n                this.setState({\n                    phrases: []\n                }) \n            })\n        } else {\n            this.setState({\n                phrases: ['Bee', 'Eye', 'En', 'Gee', 'Oh']\n            }) \n        }\n        \n    }\n    shuffleList = () => {\n        this.setState({\n            phrases: shuffle(this.state.phrases)\n        })    \n    }\n    setFree = () => {\n        this.setState({\n            free: !this.state.free,\n            key: this.state.key + 1\n        })\n    }\n    setRepeat = () => {\n        this.setState({\n            repeat: !this.state.repeat,\n            key: this.state.key + 1\n        })\n    }\n    bigger = () => {\n        this.setState({\n            size: this.state.size + 1,\n            key: this.state.key + 1\n        })\n    }\n    smaller = () => {\n        if (this.state.size > 2) {\n        this.setState({\n            size: this.state.size - 1,\n            key: this.state.key + 1\n        })}\n    }\n    phraseLister = () => {\n        let phrases = this.state.phrases\n        while (this.state.repeat && phrases.length > 0 && phrases.length <= this.state.size**2) {\n            phrases = phrases.concat(shuffle(this.state.phrases))\n        }\n        return phrases\n    }\nrender() {\n    let phrases = this.phraseLister()\n    let linkList = { pathname: `/wordlists/${this.state._id}/${encodeURIComponent(this.state.name)}`, \n                    list: {\n                        words: this.state.phrases, \n                        name: this.state.name, \n                        user: this.state.user,\n                        _id: this.state._id === \"new\" ? null : this.state._id} } \n    return (\n        <div className=\"games\">\n            <Board \n                name={this.state.name}\n                list={phrases} \n                shuffleList={this.shuffleList}\n                free={this.state.free} \n                setFree={this.setFree}\n                repeat={this.state.repeat}\n                setRepeat={this.setRepeat}\n                size={this.state.size} \n                bigger={this.bigger}\n                smaller={this.smaller}\n                link={linkList}\n                key={this.state.key}\n            />\n        </div>\n    )\n}\n}\n\nexport default withRouter(Game)","import React from 'react';\nimport { AuthRoute, ProtectedRoute } from '../util/route_util';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport SplashPage from './app/splash_page';\nimport ButtonBar from './app/button_bar';\nimport SignupFormContainer from './session/signup_form_container';\n\nimport ComposePhraseListContainer from './wordlists/compose_phrase_list_container';\nimport WordListsContainer from './wordlists/word_lists_container';\nimport Game from './game/game';\n\nimport './app.css'\n\n\nconst App = props => (\n  <div className=\"app\">\n    <ButtonBar />\n    <main className=\"main\" >\n      <Switch>\n        <AuthRoute exact path=\"/\" component={SplashPage} />\n        <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n        <ProtectedRoute exact path=\"/wordlists/\" component={WordListsContainer} />\n        <ProtectedRoute exact path=\"/wordlists/new\" component={ComposePhraseListContainer} />\n        <ProtectedRoute exact path=\"/wordlists/:id/:name?\" component={ComposePhraseListContainer} />\n        <Route exact path=\"/game/:id?/:name?\" component={Game} />\n      </Switch>\n    </main>\n  </div>\n);\n\nexport default withRouter(App);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './app';\n\nconst Root = ({ store }) => (\n  <Provider store={ store }>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nexport default Root;\n","import { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}","import {\n  RECEIVE_SESSION_ERRORS,\n  RECEIVE_CURRENT_USER,\n} from '../actions/session_actions';\n\nconst _nullErrors = [];\n\nconst SessionErrorsReducer = (state = _nullErrors, action) => {\n  Object.freeze(state);\n  switch(action.type) {\n    case RECEIVE_SESSION_ERRORS:\n      return action.errors;\n    case RECEIVE_CURRENT_USER:\n      return _nullErrors;\n    default:\n      return state;\n  }\n};\n\nexport default SessionErrorsReducer;","import { combineReducers } from 'redux';\n\nimport SessionErrorsReducer from './session_errors_reducer';\n\nexport default combineReducers({\n  session: SessionErrorsReducer\n});","import {\n    CLOSE_CONTACT_MODAL,\n    OPEN_CONTACT_MODAL,\n    CLOSE_USER_MODAL,\n    OPEN_USER_MODAL,\n    OPEN_ITEM_MODAL,\n    CLOSE_ITEM_MODAL,\n} from '../actions/ui_actions';\n\nconst preloadedState = {\n    userModalOpen: false,\n    contactUsModalOpen: false,\n    itemModal: { open: false, data: null, clothingtype: null},\n};\n\nconst SessionErrorsReducer = (state = preloadedState, action) => {\n    Object.freeze(state);\n    switch (action.type) {\n        case CLOSE_CONTACT_MODAL:\n            return Object.assign({},state, {contactUsModalOpen: false});\n        case OPEN_CONTACT_MODAL:\n            return Object.assign({},state, {contactUsModalOpen: true});\n        case CLOSE_USER_MODAL:\n            return Object.assign({},state, {userModalOpen: false});\n        case OPEN_USER_MODAL:\n            return Object.assign({},state, {userModalOpen: true});\n        case CLOSE_ITEM_MODAL:\n            return Object.assign({},state, {itemModal: {open: false, data: null, clothingtype: null} });\n        case OPEN_ITEM_MODAL:\n            return Object.assign({},state, {itemModal: {open: true, data: action.data, clothingtype: action.clothingtype}});\n        default:\n            return state;\n    }\n};\n\nexport default SessionErrorsReducer;","export const CLOSE_CONTACT_MODAL = \"CLOSE_CONTACT_MODAL\";\nexport const OPEN_CONTACT_MODAL = \"OPEN_CONTACT_MODAL\";\nexport const CLOSE_USER_MODAL = \"CLOSE_USER_MODAL\";\nexport const OPEN_USER_MODAL = \"OPEN_USER_MODAL\";\nexport const CLOSE_ITEM_MODAL = \"CLOSE_ITEM_MODAL\";\nexport const OPEN_ITEM_MODAL = \"OPEN_ITEM_MODAL\";\n\n\nexport const openContactModal = () => ({\n    type: OPEN_CONTACT_MODAL,\n})\n\nexport const closeContactModal = () => ({\n    type: CLOSE_CONTACT_MODAL,\n})\n\nexport const openUserModal = () => ({\n    type: OPEN_USER_MODAL,\n})\n\nexport const closeUserModal = () => ({\n    type: CLOSE_USER_MODAL,\n})\n\nexport const openItemModal = (data, clothingtype) => ({\n    type: OPEN_ITEM_MODAL,\n    data,\n    clothingtype\n})\n\nexport const closeItemModal = () => ({\n    type: CLOSE_ITEM_MODAL,\n})","import { RECEIVE_NEW_WORD_LIST, RECEIVE_USER_WORD_LISTS, REMOVE_WORD_LIST } from '../actions/word_list_actions';\nimport merge from 'lodash/merge';\n\n  const WordListsReducer = (state = { all: {}, user: {}, new: {} }, action) => {\n    Object.freeze(state);\n    let newState = Object.assign({}, state);\n    switch(action.type) {\n      case RECEIVE_USER_WORD_LISTS:\n        newState.user = action.lists.data;\n        return newState;\n      case RECEIVE_NEW_WORD_LIST:\n        newState = merge({}, state);\n        newState.user = newState.user.length ? [action.wordList.data, ...newState.user] : [action.wordList.data]\n        return newState;\n      case REMOVE_WORD_LIST:\n        newState = merge({}, state);\n        newState.user = newState.user.filter( list => list._id !== action.id)\n        return newState;\n      default:\n        return state;\n    }\n  };\n  \n  export default WordListsReducer;","import { combineReducers } from 'redux';\nimport session from './session_reducer';\nimport errors from './errors_reducer';\nimport ui from './ui_reducer';\nimport lists from './lists_reducer';\n\n\nconst RootReducer = combineReducers({\n  errors,\n  session,\n  ui,\n  lists\n});\n\nexport default RootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers/root_reducer';\n\nconst middlewares = [thunk];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middlewares.push(logger);\n}\n\nconst configureStore = (preloadedState = {}) => (\n  createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(...middlewares)\n  )\n);\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/root';\nimport configureStore from './store/store';\nimport jwt_decode from 'jwt-decode';\n\nimport { setAuthToken } from './util/session_api_util';\nimport { logout } from './actions/session_actions';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let store;\n\n  if (localStorage.jwtToken) {\n    setAuthToken(localStorage.jwtToken);\n\n    const decodedUser = jwt_decode(localStorage.jwtToken);\n    const preloadedState = { session: { isAuthenticated: true, user: decodedUser } };\n    \n    store = configureStore(preloadedState);\n\n    const currentTime = Date.now() / 1000;\n\n    if (decodedUser.exp < currentTime) {\n      store.dispatch(logout());\n      window.location.href = '/';\n    }\n  } else {\n    store = configureStore({});\n  }\n  const root = document.getElementById('root');\n\n  ReactDOM.render(<Root store={store} />, root);\n});"],"sourceRoot":""}